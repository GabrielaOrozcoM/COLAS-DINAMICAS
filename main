#include <iostream>
#include <string>

#include "ColaDinamica.h"

class SolicitudConstancia {
private:
    std::string nombreAlumno;
    std::string nombreCarrera;
    int materiasAprobadas;
    float promedioGeneral;

public:
    SolicitudConstancia() {}
    SolicitudConstancia(const std::string& nombre, const std::string& carrera, int materias, float promedio)
        : nombreAlumno(nombre), nombreCarrera(carrera), materiasAprobadas(materias), promedioGeneral(promedio) {}

    void mostrarDatos() const {
        std::cout << "NOMBRE ALUMNO: " << nombreAlumno << "\n";
        std::cout << "CARRERA: " << nombreCarrera << "\n";
        std::cout << "MATERIAS APROBADAS: " << materiasAprobadas << "\n";
        std::cout << "PROMEDIO GENERAL: " << promedioGeneral << "\n";
    }

    const std::string& getNombreAlumno() const {
        return nombreAlumno;
    }

    // Sobrecarga del operador < para la cola
    bool operator<(const SolicitudConstancia& otra) const {
        // Comparar por el nombre del alumno para la cola
        return nombreAlumno < otra.nombreAlumno;
    }

    // Sobrecarga del operador << para imprimir SolicitudConstancia
    friend std::ostream& operator<<(std::ostream& os, const SolicitudConstancia& solicitud) {
        os << "NOMBRE ALUMNO: " << solicitud.nombreAlumno << "\n";
        os << "CARRERA: " << solicitud.nombreCarrera << "\n";
        os << "MATERIAS APROBADAS: " << solicitud.materiasAprobadas << "\n";
        os << "PROMEDIO: " << solicitud.promedioGeneral << "\n";
        return os;
    }
};

// Función para mostrar el menú y procesar las opciones
void mostrarMenu(ColaDinamica<SolicitudConstancia>& colaSolicitudes) {
    int opcion;
    do {
        std::cout << "\nMENU:\n";
        std::cout << "1. REGISTRAR SOLI DE CONSTANCIA\n";
        std::cout << "2. ELABORAR CONSTANCIA\n";
        std::cout << "3. MOSTRAR SOLICITUDES\n";
        std::cout << "4. SALIR\n";
        std::cout << "OPCION: ";
        std::cin >> opcion;

        switch (opcion) {
            case 1: {
                std::string nombreAlumno, nombreCarrera;
                int materiasAprobadas;
                float promedioGeneral;

                std::cout << "NOMBRE ALUMNO: ";
                std::cin.ignore();
                std::getline(std::cin, nombreAlumno);
                std::cout << "CARRERA: ";
                std::getline(std::cin, nombreCarrera);
                std::cout << "TOTAL DE MATERIAS APROBADAS: ";
                std::cin >> materiasAprobadas;
                std::cout << "PROMEDIO: ";
                std::cin >> promedioGeneral;

                SolicitudConstancia solicitud(nombreAlumno, nombreCarrera, materiasAprobadas, promedioGeneral);
                colaSolicitudes.encolar(solicitud);
                std::cout << "SE HA REGISTRADO LA SOLICITUD\n";
                break;
            }
            case 2: {
                if (!colaSolicitudes.vacia()) {
                    SolicitudConstancia solicitud = colaSolicitudes.frenteCola();
                    solicitud.mostrarDatos();
                    colaSolicitudes.desencolar();
                    std::cout << "CONSTANCIA ELABORADA \nSOLICITUD ELIMINADA DE LA COLA\n";
                } else {
                    std::cout << "SIN SOLICITUDES PENDIENTES\n";
                }
                break;
            }
            case 3: {
                colaSolicitudes.imprimir();
break;
            }
            case 4:
                std::cout << "SALIENDO\n";
                break;
            default:
                std::cout << "OPCION NO VALIDA\n";
                break;
        }
    } while (opcion != 4);
}

int main() {
    ColaDinamica<SolicitudConstancia> colaSolicitudes;

    // Mostrar el menú de opciones
    mostrarMenu(colaSolicitudes);

    return 0;
}
